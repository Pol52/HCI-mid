import sys
from PyQt5.QtWidgets import QApplication, QLabel, QMainWindow, QWidget, QLayout, QGridLayout, QPushButton
from PyQt5.QtGui import QPixmap, QTransform
from PyQt5.QtCore import Qt
import PIL.Image

class Image(QLabel):

    rotation = 0

    def __init__(self, *__args):
        QLabel.__init__(self, *__args)
        self.pixmap = QPixmap('image.jpeg')
        self.setPixmap(self.pixmap)
        imageData = PIL.Image.open('image.jpeg')
        self.exif_data = imageData._getexif()
        self.rotation = 0

    def resize(self, width, height):
        QLabel.resize(self, width, height)
        self.pixmap = QPixmap('image.jpeg')
        self.pixmap = self.pixmap.transformed(QTransform().rotate(self.rotation))
        if self.rotation % 180 == 0:
            self.pixmap = self.pixmap.scaledToWidth(width)
        else:
            self.pixmap = self.pixmap.scaledToHeight(height)
        # self.pixmap = pixmap1.scaled(width, height, Qt.KeepAspectRatio,  Qt.SmoothTransformation)
        self.setPixmap(self.pixmap)

    # def rotate(self, angle):
    #     self.pixmap = self.pixmap.transformed(QTransform().rotate(angle))
    #     self.setPixmap(self.pixmap)
    #     if self.rotation == 3:
    #         self.rotation = 0
    #     else:
    #         self.rotation += 1

    def rotate(self, width, height, angle):
        QLabel.resize(self, width, height)
        pixmap = QPixmap('image.jpeg')
        pixmap = pixmap.transformed(QTransform().rotate(self.rotation + angle))
        self.rotation = self.rotation + angle
        if self.rotation % 180 == 0:
            pixmap = pixmap.scaledToWidth(width)
        else:
            pixmap = pixmap.scaledToHeight(height)
        self.pixmap = pixmap
        self.setPixmap(self.pixmap)

    def convertExif(self):
        result = {}
        exif_data = self.exif_data
        exif_data["Camera Manufactureur"] = exif_data.pop(271)
        exif_data["Camera Model"] = exif_data.pop(272)
        exif_data["Generated by"] = exif_data.pop(305)
        for data in exif_data:
            if type(data) != int:
                result[data] = exif_data[data]

        return result


class Window(QWidget):

    def __init__(self, parent=None, Qt_WindowFlags=None, Qt_WindowType=None, *args, **kwargs):
        QWidget.__init__(self)
        self.label = Image(self)

    def resizeEvent(self, event):
        self.label.resize(self.width(), self.height())

    def rotate(self, angle):
        width = self.width()
        height = self.height()
        self.label.rotate(width, height, angle)
        self.label.setAlignment(Qt.AlignCenter)
